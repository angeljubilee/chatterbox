{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/components/ActiveChat/Messages.js\";\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { SenderBubble, OtherUserBubble } from \"../ActiveChat\";\nimport moment from \"moment\";\nimport OtherUserAvatar from \"./OtherUserAvatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Messages = props => {\n  const {\n    messages,\n    otherUser,\n    userId\n  } = props;\n  const firstUnreadMessage = messages.findIndex(msg => msg.msgRead === false);\n  const lastReadMessageId = firstUnreadMessage === -1 ? messages[messages.length - 1].id : messages[firstUnreadMessage - 1].id;\n  console.log(lastReadMessageId);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: messages.map(message => {\n      const time = moment(message.createdAt).format(\"h:mm\");\n      return message.senderId === userId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SenderBubble, {\n          text: message.text,\n          time: time\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), message.id === lastReadMessageId && /*#__PURE__*/_jsxDEV(OtherUserAvatar, {\n          otherUser: otherUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(OtherUserBubble, {\n        text: message.text,\n        time: time,\n        otherUser: otherUser\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/components/ActiveChat/Messages.js"],"names":["React","Box","SenderBubble","OtherUserBubble","moment","OtherUserAvatar","Messages","props","messages","otherUser","userId","firstUnreadMessage","findIndex","msg","msgRead","lastReadMessageId","length","id","console","log","map","message","time","createdAt","format","senderId","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,eAA9C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAkCH,KAAxC;AACA,QAAMI,kBAAkB,GAAGH,QAAQ,CAACI,SAAT,CAAmBC,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,KAA1C,CAA3B;AACA,QAAMC,iBAAiB,GAAIJ,kBAAkB,KAAK,CAAC,CAAzB,GACtBH,QAAQ,CAACA,QAAQ,CAACQ,MAAT,GAAkB,CAAnB,CAAR,CAA8BC,EADR,GAEtBT,QAAQ,CAACG,kBAAkB,GAAG,CAAtB,CAAR,CAAiCM,EAFrC;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,iBAAZ;AAGA,sBACE,QAAC,GAAD;AAAA,cACGP,QAAQ,CAACY,GAAT,CAAcC,OAAD,IAAa;AACzB,YAAMC,IAAI,GAAGlB,MAAM,CAACiB,OAAO,CAACE,SAAT,CAAN,CAA0BC,MAA1B,CAAiC,MAAjC,CAAb;AAEA,aAAOH,OAAO,CAACI,QAAR,KAAqBf,MAArB,gBACL;AAAA,gCACE,QAAC,YAAD;AAA+B,UAAA,IAAI,EAAEW,OAAO,CAACK,IAA7C;AAAmD,UAAA,IAAI,EAAEJ;AAAzD,WAAmBD,OAAO,CAACJ,EAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGI,OAAO,CAACJ,EAAR,KAAeF,iBAAf,iBACD,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAEN;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,sBADK,gBAOL,QAAC,eAAD;AAAkC,QAAA,IAAI,EAAEY,OAAO,CAACK,IAAhD;AAAsD,QAAA,IAAI,EAAEJ,IAA5D;AAAkE,QAAA,SAAS,EAAEb;AAA7E,SAAsBY,OAAO,CAACJ,EAA9B;AAAA;AAAA;AAAA;AAAA,cAPF;AASD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3BD;;KAAMX,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { SenderBubble, OtherUserBubble } from \"../ActiveChat\";\nimport moment from \"moment\";\nimport OtherUserAvatar from \"./OtherUserAvatar\";\n\nconst Messages = (props) => {\n  const { messages, otherUser, userId } = props;\n  const firstUnreadMessage = messages.findIndex(msg => msg.msgRead === false);\n  const lastReadMessageId = (firstUnreadMessage === -1)\n    ? messages[messages.length - 1].id\n    : messages[firstUnreadMessage - 1].id;\n\n  console.log(lastReadMessageId);\n\n\n  return (\n    <Box>\n      {messages.map((message) => {\n        const time = moment(message.createdAt).format(\"h:mm\");\n\n        return message.senderId === userId ? (\n          <>\n            <SenderBubble key={message.id} text={message.text} time={time} />\n            {message.id === lastReadMessageId &&\n            <OtherUserAvatar otherUser={otherUser} />}\n          </>\n        ) : (\n          <OtherUserBubble key={message.id} text={message.text} time={time} otherUser={otherUser} />\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}