{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/components/Sidebar/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { BadgeAvatar, ChatContent, UnreadMsgCount } from \"../Sidebar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setActiveChat } from \"../../store/activeConversation\";\nimport { connect } from \"react-redux\";\nimport { markMessagesRead } from \"../../store/utils/thunkCreators\";\nimport UnreadMessageBadge from \"./UnreadMessageBadge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: 8,\n    height: 80,\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\n    marginBottom: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      cursor: \"grab\"\n    }\n  }\n}));\n\nconst Chat = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    markMessagesRead,\n    conversation\n  } = props;\n  const {\n    otherUser\n  } = conversation;\n  const unreadMsgCount = useMemo(() => {\n    let count = conversation.messages.reduce((acc, curr) => {\n      if (!curr.msgRead && curr.senderId === otherUser.id) {\n        return acc + 1;\n      }\n\n      return acc;\n    }, 0);\n    return count;\n  }, [conversation, otherUser]);\n  console.log('unreadMsgCount', unreadMsgCount);\n\n  const handleClick = async conversation => {\n    await props.setActiveChat(conversation.otherUser.username);\n\n    if (unreadMsgCount) {\n      markMessagesRead(conversation.id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    onClick: () => handleClick(conversation),\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(BadgeAvatar, {\n      photoUrl: otherUser.photoUrl,\n      username: otherUser.username,\n      online: otherUser.online,\n      sidebar: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n      conversation: conversation,\n      unreadCount: unreadMsgCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UnreadMessageBadge, {\n      unreadCount: unreadMsgCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"EhYzERLn1Uxw52Ryp+CKyoXrdNE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveChat: id => {\n      dispatch(setActiveChat(id));\n    },\n    markMessagesRead: msgIds => {\n      dispatch(markMessagesRead(msgIds));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/components/Sidebar/Chat.js"],"names":["React","useMemo","Box","BadgeAvatar","ChatContent","UnreadMsgCount","makeStyles","setActiveChat","connect","markMessagesRead","UnreadMessageBadge","useStyles","theme","root","borderRadius","height","boxShadow","marginBottom","display","alignItems","cursor","Chat","props","classes","conversation","otherUser","unreadMsgCount","count","messages","reduce","acc","curr","msgRead","senderId","id","console","log","handleClick","username","photoUrl","online","mapDispatchToProps","dispatch","msgIds"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { BadgeAvatar, ChatContent, UnreadMsgCount } from \"../Sidebar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setActiveChat } from \"../../store/activeConversation\";\nimport { connect } from \"react-redux\";\nimport { markMessagesRead } from \"../../store/utils/thunkCreators\";\nimport UnreadMessageBadge from \"./UnreadMessageBadge\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 8,\n    height: 80,\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\n    marginBottom: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      cursor: \"grab\"\n    }\n  }\n}));\n\nconst Chat = (props) => {\n  const classes = useStyles();\n  const { markMessagesRead, conversation } = props;\n  const { otherUser } = conversation;\n\n  const unreadMsgCount = useMemo(() => {\n    let count = conversation.messages.reduce((acc, curr) => {\n      if (!curr.msgRead && curr.senderId === otherUser.id) {\n        return acc+1;\n      }\n      return acc;\n    }, 0);\n    return count;\n  }, [conversation, otherUser]);\n\n  console.log('unreadMsgCount', unreadMsgCount);\n\n  const handleClick = async (conversation) => {\n    await props.setActiveChat(conversation.otherUser.username);\n    if (unreadMsgCount) {\n      markMessagesRead(conversation.id);\n    }\n  };\n\n  return (\n    <Box onClick={() => handleClick(conversation)} className={classes.root}>\n      <BadgeAvatar\n        photoUrl={otherUser.photoUrl}\n        username={otherUser.username}\n        online={otherUser.online}\n        sidebar={true}\n      />\n      <ChatContent conversation={conversation} unreadCount={unreadMsgCount} />\n      <UnreadMessageBadge unreadCount={unreadMsgCount}/>\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveChat: (id) => {\n      dispatch(setActiveChat(id));\n    },\n    markMessagesRead: (msgIds) => {\n      dispatch(markMessagesRead(msgIds));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}