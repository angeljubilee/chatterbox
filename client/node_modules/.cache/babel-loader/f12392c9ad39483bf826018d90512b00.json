{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport loggerMiddleware from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport user from \"./user\";\nimport conversations from \"./conversations\";\nimport activeConversation from \"./activeConversation\";\nconst CLEAR_ON_LOGOUT = \"CLEAR_ON_LOGOUT\";\nexport const clearOnLogout = () => {\n  return {\n    type: CLEAR_ON_LOGOUT\n  };\n};\nconst appReducer = combineReducers({\n  user,\n  conversations,\n  activeConversation\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === CLEAR_ON_LOGOUT) {\n    // set state to initial state\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/store/index.js"],"names":["createStore","applyMiddleware","combineReducers","loggerMiddleware","thunkMiddleware","user","conversations","activeConversation","CLEAR_ON_LOGOUT","clearOnLogout","type","appReducer","rootReducer","state","action","undefined"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,gBAAP,MAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD,CAJM;AAMP,MAAMG,UAAU,GAAGT,eAAe,CAAC;AACjCG,EAAAA,IADiC;AAEjCC,EAAAA,aAFiC;AAGjCC,EAAAA;AAHiC,CAAD,CAAlC;;AAKA,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACJ,IAAP,KAAgBF,eAApB,EAAqC;AACnC;AACAK,IAAAA,KAAK,GAAGE,SAAR;AACD;;AACD,SAAOJ,UAAU,CAACE,KAAD,EAAQC,MAAR,CAAjB;AACD,CAND;;AAQA,eAAed,WAAW,CAACY,WAAD,EAAcX,eAAe,CAACG,eAAD,EAAkBD,gBAAlB,CAA7B,CAA1B","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport loggerMiddleware from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport user from \"./user\";\nimport conversations from \"./conversations\";\nimport activeConversation from \"./activeConversation\";\n\nconst CLEAR_ON_LOGOUT = \"CLEAR_ON_LOGOUT\";\n\nexport const clearOnLogout = () => {\n  return {\n    type: CLEAR_ON_LOGOUT\n  };\n};\n\nconst appReducer = combineReducers({\n  user,\n  conversations,\n  activeConversation\n});\nconst rootReducer = (state, action) => {\n  if (action.type === CLEAR_ON_LOGOUT) {\n    // set state to initial state\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\n"]},"metadata":{},"sourceType":"module"}