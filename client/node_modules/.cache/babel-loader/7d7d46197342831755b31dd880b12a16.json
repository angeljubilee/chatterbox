{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/routes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"./store/utils/thunkCreators\";\nimport Signup from \"./Signup.js\";\nimport Login from \"./Login.js\";\nimport { Home, SnackbarError } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routes = props => {\n  _s();\n\n  const {\n    user,\n    fetchUser\n  } = props;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n  useEffect(() => {\n    if (user.error) {\n      // check to make sure error is what we expect, in case we get an unexpected server error object\n      if (typeof user.error === \"string\") {\n        setErrorMessage(user.error);\n      } else {\n        setErrorMessage(\"Internal Server Error. Please try again\");\n      }\n\n      setSnackBarOpen(true);\n    }\n  }, [user.error]);\n\n  if (props.user.isFetchingUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [snackBarOpen && /*#__PURE__*/_jsxDEV(SnackbarError, {\n      setSnackBarOpen: setSnackBarOpen,\n      errorMessage: errorMessage,\n      snackBarOpen: snackBarOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: Signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: props => {\n          var _props$user;\n\n          return ((_props$user = props.user) === null || _props$user === void 0 ? void 0 : _props$user.id) ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 48\n          }, this) : /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 59\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Routes, \"QkQ5LFuYHHGl2xa35PembmvpQdI=\");\n\n_c = Routes;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUser() {\n      dispatch(fetchUser());\n    }\n\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes));\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/routes.js"],"names":["React","useEffect","useState","Route","Switch","withRouter","connect","fetchUser","Signup","Login","Home","SnackbarError","Routes","props","user","errorMessage","setErrorMessage","snackBarOpen","setSnackBarOpen","error","isFetchingUser","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,cAApC;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQP,IAAAA;AAAR,MAAsBM,KAA5B;AACA,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAI,CAACK,KAAT,EAAgB;AACd;AACA,UAAI,OAAOL,IAAI,CAACK,KAAZ,KAAsB,QAA1B,EAAoC;AAClCH,QAAAA,eAAe,CAACF,IAAI,CAACK,KAAN,CAAf;AACD,OAFD,MAEO;AACLH,QAAAA,eAAe,CAAC,yCAAD,CAAf;AACD;;AACDE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAVQ,EAUN,CAACJ,IAAI,CAACK,KAAN,CAVM,CAAT;;AAYA,MAAIN,KAAK,CAACC,IAAN,CAAWM,cAAf,EAA+B;AAC7B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,eACGH,YAAY,iBACX,QAAC,aAAD;AACE,MAAA,eAAe,EAAEC,eADnB;AAEE,MAAA,YAAY,EAAEH,YAFhB;AAGE,MAAA,YAAY,EAAEE;AAHhB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAER;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAED;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,GAFP;AAGE,QAAA,MAAM,EAAGK,KAAD;AAAA;;AAAA,iBAAY,gBAAAA,KAAK,CAACC,IAAN,4DAAYO,EAAZ,iBAAiB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAAjB,gBAA4B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAAxC;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEX;AAA/B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAqBD,CA9CD;;GAAME,M;;KAAAA,M;;AAgDN,MAAMU,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlB,IAAAA,SAAS,GAAG;AACVkB,MAAAA,QAAQ,CAAClB,SAAS,EAAV,CAAR;AACD;;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeF,UAAU,CAACC,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,MAA7C,CAAD,CAAzB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"./store/utils/thunkCreators\";\nimport Signup from \"./Signup.js\";\nimport Login from \"./Login.js\";\nimport { Home, SnackbarError } from \"./components\";\n\nconst Routes = (props) => {\n  const { user, fetchUser } = props;\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  useEffect(() => {\n    fetchUser();\n  }, [fetchUser]);\n\n  useEffect(() => {\n    if (user.error) {\n      // check to make sure error is what we expect, in case we get an unexpected server error object\n      if (typeof user.error === \"string\") {\n        setErrorMessage(user.error);\n      } else {\n        setErrorMessage(\"Internal Server Error. Please try again\");\n      }\n      setSnackBarOpen(true);\n    }\n  }, [user.error]);\n\n  if (props.user.isFetchingUser) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {snackBarOpen && (\n        <SnackbarError\n          setSnackBarOpen={setSnackBarOpen}\n          errorMessage={errorMessage}\n          snackBarOpen={snackBarOpen}\n        />\n      )}\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Signup} />\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (props.user?.id ? <Home /> : <Signup />)}\n        />\n        <Route path=\"/home\" component={Home} />\n      </Switch>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUser() {\n      dispatch(fetchUser());\n    },\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes));\n"]},"metadata":{},"sourceType":"module"}