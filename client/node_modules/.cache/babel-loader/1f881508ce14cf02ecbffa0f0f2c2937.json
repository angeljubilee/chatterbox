{"ast":null,"code":"import { addNewConvoToStore, addOnlineUserToStore, addSearchedUsersToStore, removeOfflineUserFromStore, addMessageToStore, updateMessagesToStore } from \"./utils/reducerFunctions\"; // ACTIONS\n\nconst GET_CONVERSATIONS = \"GET_CONVERSATIONS\";\nconst SET_MESSAGE = \"SET_MESSAGE\";\nconst ADD_ONLINE_USER = \"ADD_ONLINE_USER\";\nconst REMOVE_OFFLINE_USER = \"REMOVE_OFFLINE_USER\";\nconst SET_SEARCHED_USERS = \"SET_SEARCHED_USERS\";\nconst CLEAR_SEARCHED_USERS = \"CLEAR_SEARCHED_USERS\";\nconst ADD_CONVERSATION = \"ADD_CONVERSATION\";\nconst UPDATE_MESSAGES = \"UPDATE_MESSAGES\"; // ACTION CREATORS\n\nexport const gotConversations = conversations => {\n  return {\n    type: GET_CONVERSATIONS,\n    conversations\n  };\n};\nexport const setNewMessage = (message, sender) => {\n  return {\n    type: SET_MESSAGE,\n    payload: {\n      message,\n      sender: sender || null\n    }\n  };\n};\nexport const addOnlineUser = id => {\n  return {\n    type: ADD_ONLINE_USER,\n    id\n  };\n};\nexport const removeOfflineUser = id => {\n  return {\n    type: REMOVE_OFFLINE_USER,\n    id\n  };\n};\nexport const setSearchedUsers = users => {\n  return {\n    type: SET_SEARCHED_USERS,\n    users\n  };\n};\nexport const clearSearchedUsers = () => {\n  return {\n    type: CLEAR_SEARCHED_USERS\n  };\n}; // add new conversation when sending a new message\n\nexport const addConversation = (recipientId, newMessage) => {\n  return {\n    type: ADD_CONVERSATION,\n    payload: {\n      recipientId,\n      newMessage\n    }\n  };\n};\nexport const updateMessages = conversationId => {\n  return {\n    type: UPDATE_MESSAGES,\n    payload: {\n      conversationId\n    }\n  };\n}; // REDUCER\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_CONVERSATIONS:\n      return action.conversations;\n\n    case SET_MESSAGE:\n      return addMessageToStore(state, action.payload);\n\n    case ADD_ONLINE_USER:\n      {\n        return addOnlineUserToStore(state, action.id);\n      }\n\n    case REMOVE_OFFLINE_USER:\n      {\n        return removeOfflineUserFromStore(state, action.id);\n      }\n\n    case SET_SEARCHED_USERS:\n      return addSearchedUsersToStore(state, action.users);\n\n    case CLEAR_SEARCHED_USERS:\n      return state.filter(convo => convo.id);\n\n    case ADD_CONVERSATION:\n      return addNewConvoToStore(state, action.payload.recipientId, action.payload.newMessage);\n\n    case UPDATE_MESSAGES:\n      return updateMessagesToStore(state, action.payload.conversationId);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/store/conversations.js"],"names":["addNewConvoToStore","addOnlineUserToStore","addSearchedUsersToStore","removeOfflineUserFromStore","addMessageToStore","updateMessagesToStore","GET_CONVERSATIONS","SET_MESSAGE","ADD_ONLINE_USER","REMOVE_OFFLINE_USER","SET_SEARCHED_USERS","CLEAR_SEARCHED_USERS","ADD_CONVERSATION","UPDATE_MESSAGES","gotConversations","conversations","type","setNewMessage","message","sender","payload","addOnlineUser","id","removeOfflineUser","setSearchedUsers","users","clearSearchedUsers","addConversation","recipientId","newMessage","updateMessages","conversationId","reducer","state","action","filter","convo"],"mappings":"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","sourcesContent":["import {\n  addNewConvoToStore,\n  addOnlineUserToStore,\n  addSearchedUsersToStore,\n  removeOfflineUserFromStore,\n  addMessageToStore,\n  updateMessagesToStore,\n} from \"./utils/reducerFunctions\";\n\n// ACTIONS\n\nconst GET_CONVERSATIONS = \"GET_CONVERSATIONS\";\nconst SET_MESSAGE = \"SET_MESSAGE\";\nconst ADD_ONLINE_USER = \"ADD_ONLINE_USER\";\nconst REMOVE_OFFLINE_USER = \"REMOVE_OFFLINE_USER\";\nconst SET_SEARCHED_USERS = \"SET_SEARCHED_USERS\";\nconst CLEAR_SEARCHED_USERS = \"CLEAR_SEARCHED_USERS\";\nconst ADD_CONVERSATION = \"ADD_CONVERSATION\";\nconst UPDATE_MESSAGES = \"UPDATE_MESSAGES\";\n\n// ACTION CREATORS\n\nexport const gotConversations = (conversations) => {\n  return {\n    type: GET_CONVERSATIONS,\n    conversations,\n  };\n};\n\nexport const setNewMessage = (message, sender) => {\n  return {\n    type: SET_MESSAGE,\n    payload: { message, sender: sender || null },\n  };\n};\n\nexport const addOnlineUser = (id) => {\n  return {\n    type: ADD_ONLINE_USER,\n    id,\n  };\n};\n\nexport const removeOfflineUser = (id) => {\n  return {\n    type: REMOVE_OFFLINE_USER,\n    id,\n  };\n};\n\nexport const setSearchedUsers = (users) => {\n  return {\n    type: SET_SEARCHED_USERS,\n    users,\n  };\n};\n\nexport const clearSearchedUsers = () => {\n  return {\n    type: CLEAR_SEARCHED_USERS,\n  };\n};\n\n// add new conversation when sending a new message\nexport const addConversation = (recipientId, newMessage) => {\n  return {\n    type: ADD_CONVERSATION,\n    payload: { recipientId, newMessage },\n  };\n};\n\nexport const updateMessages = (conversationId) => {\n  return {\n    type: UPDATE_MESSAGES,\n    payload: { conversationId },\n  };\n}\n\n// REDUCER\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case GET_CONVERSATIONS:\n      return action.conversations;\n    case SET_MESSAGE:\n      return addMessageToStore(state, action.payload);\n    case ADD_ONLINE_USER: {\n      return addOnlineUserToStore(state, action.id);\n    }\n    case REMOVE_OFFLINE_USER: {\n      return removeOfflineUserFromStore(state, action.id);\n    }\n    case SET_SEARCHED_USERS:\n      return addSearchedUsersToStore(state, action.users);\n    case CLEAR_SEARCHED_USERS:\n      return state.filter((convo) => convo.id);\n    case ADD_CONVERSATION:\n      return addNewConvoToStore(\n        state,\n        action.payload.recipientId,\n        action.payload.newMessage\n      );\n    case UPDATE_MESSAGES:\n      return updateMessagesToStore(state, action.payload.conversationId);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}