{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Grid, Box, Typography, Button, FormControl, TextField, FormHelperText } from \"@material-ui/core\";\nimport { register } from \"./store/utils/thunkCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    user,\n    register\n  } = props;\n  const [formErrorMessage, setFormErrorMessage] = useState({});\n\n  const handleRegister = async event => {\n    event.preventDefault();\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const confirmPassword = event.target.confirmPassword.value;\n\n    if (password !== confirmPassword) {\n      setFormErrorMessage({\n        confirmPassword: \"Passwords must match\"\n      });\n      return;\n    }\n\n    await register({\n      username,\n      email,\n      password\n    });\n  };\n\n  if (user.id) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Need to log in?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => history.push(\"/login\"),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleRegister,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                \"aria-label\": \"username\",\n                label: \"Username\",\n                name: \"username\",\n                type: \"text\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"E-mail address\",\n                \"aria-label\": \"e-mail address\",\n                type: \"email\",\n                name: \"email\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              error: !!formErrorMessage.confirmPassword,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                \"aria-label\": \"password\",\n                label: \"Password\",\n                type: \"password\",\n                inputProps: {\n                  minLength: 6\n                },\n                name: \"password\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: formErrorMessage.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              error: !!formErrorMessage.confirmPassword,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Confirm Password\",\n                \"aria-label\": \"confirm password\",\n                type: \"password\",\n                inputProps: {\n                  minLength: 6\n                },\n                name: \"confirmPassword\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: formErrorMessage.confirmPassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"PLQ3kq+fB1QuyBcAquZX6hlYUm0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    register: credentials => {\n      dispatch(register(credentials));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/Signup.js"],"names":["React","useState","Redirect","useHistory","connect","Grid","Box","Typography","Button","FormControl","TextField","FormHelperText","register","Login","props","history","user","formErrorMessage","setFormErrorMessage","handleRegister","event","preventDefault","username","target","value","email","password","confirmPassword","id","push","minLength","mapStateToProps","state","mapDispatchToProps","dispatch","credentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Grid,\n  Box,\n  Typography,\n  Button,\n  FormControl,\n  TextField,\n  FormHelperText,\n} from \"@material-ui/core\";\nimport { register } from \"./store/utils/thunkCreators\";\n\nconst Login = (props) => {\n  const history = useHistory();\n  const { user, register } = props;\n  const [formErrorMessage, setFormErrorMessage] = useState({});\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    const username = event.target.username.value;\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n    const confirmPassword = event.target.confirmPassword.value;\n\n    if (password !== confirmPassword) {\n      setFormErrorMessage({ confirmPassword: \"Passwords must match\" });\n      return;\n    }\n\n    await register({ username, email, password });\n  };\n\n  if (user.id) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Box>\n        <Grid container item>\n          <Typography>Need to log in?</Typography>\n          <Button onClick={() => history.push(\"/login\")}>Login</Button>\n        </Grid>\n        <form onSubmit={handleRegister}>\n          <Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  aria-label=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  type=\"text\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl>\n                <TextField\n                  label=\"E-mail address\"\n                  aria-label=\"e-mail address\"\n                  type=\"email\"\n                  name=\"email\"\n                  required\n                />\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  aria-label=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"password\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Grid>\n              <FormControl error={!!formErrorMessage.confirmPassword}>\n                <TextField\n                  label=\"Confirm Password\"\n                  aria-label=\"confirm password\"\n                  type=\"password\"\n                  inputProps={{ minLength: 6 }}\n                  name=\"confirmPassword\"\n                  required\n                />\n                <FormHelperText>\n                  {formErrorMessage.confirmPassword}\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n            <Button type=\"submit\" variant=\"contained\" size=\"large\">\n              Create\n            </Button>\n          </Grid>\n        </form>\n      </Box>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    register: (credentials) => {\n      dispatch(register(credentials));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}