{"ast":null,"code":"import axios from \"axios\";\nimport socket from \"../../socket\";\nimport { gotConversations, addConversation, setNewMessage, setSearchedUsers, updateMessages } from \"../conversations\";\nimport { gotUser, setFetchingStatus } from \"../user\";\naxios.interceptors.request.use(async function (config) {\n  const token = await localStorage.getItem(\"messenger-token\");\n  config.headers[\"x-access-token\"] = token;\n  return config;\n}); // USER THUNK CREATORS\n\nexport const fetchUser = () => async dispatch => {\n  dispatch(setFetchingStatus(true));\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/auth/user\");\n    dispatch(gotUser(data));\n\n    if (data.id) {\n      socket.emit(\"go-online\", data.id);\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n    dispatch(setFetchingStatus(false));\n  }\n};\nexport const register = credentials => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/auth/register\", credentials);\n    await localStorage.setItem(\"messenger-token\", data.token);\n    dispatch(gotUser(data));\n    socket.emit(\"go-online\", data.id);\n  } catch (error) {\n    console.error(error);\n    dispatch(gotUser({\n      error: error.response.data.error || \"Server Error\"\n    }));\n  }\n};\nexport const login = credentials => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/auth/login\", credentials);\n    await localStorage.setItem(\"messenger-token\", data.token);\n    dispatch(gotUser(data));\n    socket.emit(\"go-online\", data.id);\n  } catch (error) {\n    console.error(error);\n    dispatch(gotUser({\n      error: error.response.data.error || \"Server Error\"\n    }));\n  }\n};\nexport const logout = id => async dispatch => {\n  try {\n    await axios.delete(\"/auth/logout\");\n    await localStorage.removeItem(\"messenger-token\");\n    dispatch(gotUser({}));\n    socket.emit(\"logout\", id);\n  } catch (error) {\n    console.error(error);\n  }\n}; // CONVERSATIONS THUNK CREATORS\n\nexport const fetchConversations = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/conversations\");\n    dispatch(gotConversations(data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst saveMessage = async body => {\n  const {\n    data\n  } = await axios.post(\"/api/messages\", body);\n  return data;\n};\n\nconst sendMessage = (data, body) => {\n  socket.emit(\"new-message\", {\n    message: data.message,\n    recipientId: body.recipientId,\n    sender: data.sender\n  });\n}; // message format to send: {recipientId, text, conversationId}\n// conversationId will be set to null if its a brand new conversation\n\n\nexport const postMessage = body => async dispatch => {\n  try {\n    const data = await saveMessage(body);\n\n    if (!body.conversationId) {\n      dispatch(addConversation(body.recipientId, data.message));\n    } else {\n      dispatch(setNewMessage(data.message));\n    }\n\n    sendMessage(data, body);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const searchUsers = searchTerm => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${searchTerm}`);\n    dispatch(setSearchedUsers(data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst markMsgRead = async id => {\n  console.log('Inside markMsgRead', id);\n  const {\n    data\n  } = await axios.patch(`/api/messages/${id}`, {\n    msgRead: true\n  });\n  console.log(data);\n  return data;\n};\n\nexport const markMessagesRead = msgIds => async dispatch => {\n  console.log('Inside markMessageRead');\n  console.log(msgIds);\n\n  try {\n    const data = msgIds.map(id => markMsgRead(id));\n    console.log(data);\n    const messages = await Promise.all(data);\n    console.log(messages);\n    dispatch(updateMessages(messages));\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/store/utils/thunkCreators.js"],"names":["axios","socket","gotConversations","addConversation","setNewMessage","setSearchedUsers","updateMessages","gotUser","setFetchingStatus","interceptors","request","use","config","token","localStorage","getItem","headers","fetchUser","dispatch","data","get","id","emit","error","console","register","credentials","post","setItem","response","login","logout","delete","removeItem","fetchConversations","saveMessage","body","sendMessage","message","recipientId","sender","postMessage","conversationId","searchUsers","searchTerm","markMsgRead","log","patch","msgRead","markMessagesRead","msgIds","map","messages","Promise","all"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport socket from \"../../socket\";\nimport {\n  gotConversations,\n  addConversation,\n  setNewMessage,\n  setSearchedUsers,\n  updateMessages,\n} from \"../conversations\";\nimport { gotUser, setFetchingStatus } from \"../user\";\n\naxios.interceptors.request.use(async function (config) {\n  const token = await localStorage.getItem(\"messenger-token\");\n  config.headers[\"x-access-token\"] = token;\n\n  return config;\n});\n\n// USER THUNK CREATORS\n\nexport const fetchUser = () => async (dispatch) => {\n  dispatch(setFetchingStatus(true));\n  try {\n    const { data } = await axios.get(\"/auth/user\");\n    dispatch(gotUser(data));\n    if (data.id) {\n      socket.emit(\"go-online\", data.id);\n    }\n  } catch (error) {\n    console.error(error);\n  } finally {\n    dispatch(setFetchingStatus(false));\n  }\n};\n\nexport const register = (credentials) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\"/auth/register\", credentials);\n    await localStorage.setItem(\"messenger-token\", data.token);\n    dispatch(gotUser(data));\n    socket.emit(\"go-online\", data.id);\n  } catch (error) {\n    console.error(error);\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\n  }\n};\n\nexport const login = (credentials) => async (dispatch) => {\n  try {\n    const { data } = await axios.post(\"/auth/login\", credentials);\n    await localStorage.setItem(\"messenger-token\", data.token);\n    dispatch(gotUser(data));\n    socket.emit(\"go-online\", data.id);\n  } catch (error) {\n    console.error(error);\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\n  }\n};\n\nexport const logout = (id) => async (dispatch) => {\n  try {\n    await axios.delete(\"/auth/logout\");\n    await localStorage.removeItem(\"messenger-token\");\n    dispatch(gotUser({}));\n    socket.emit(\"logout\", id);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// CONVERSATIONS THUNK CREATORS\n\nexport const fetchConversations = () => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\"/api/conversations\");\n    dispatch(gotConversations(data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst saveMessage = async (body) => {\n  const { data } = await axios.post(\"/api/messages\", body);\n  return data;\n};\n\nconst sendMessage = (data, body) => {\n  socket.emit(\"new-message\", {\n    message: data.message,\n    recipientId: body.recipientId,\n    sender: data.sender,\n  });\n};\n\n// message format to send: {recipientId, text, conversationId}\n// conversationId will be set to null if its a brand new conversation\nexport const postMessage = (body) => async (dispatch) => {\n  try {\n    const data = await saveMessage(body);\n    if (!body.conversationId) {\n      dispatch(addConversation(body.recipientId, data.message));\n    } else {\n      dispatch(setNewMessage(data.message));\n    }\n    sendMessage(data, body);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchUsers = (searchTerm) => async (dispatch) => {\n  try {\n    const { data } = await axios.get(`/api/users/${searchTerm}`);\n    dispatch(setSearchedUsers(data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst markMsgRead = async (id) => {\n  console.log('Inside markMsgRead', id);\n  const { data } = await axios.patch(`/api/messages/${id}`, { msgRead: true });\n  console.log(data);\n  return data;\n};\n\n\nexport const markMessagesRead = (msgIds) => async (dispatch) => {\n  console.log('Inside markMessageRead');\n  console.log(msgIds);\n  try {\n    const data = msgIds.map(id => markMsgRead(id));\n    console.log(data);\n    const messages = await Promise.all(data);\n    console.log(messages);\n    dispatch(updateMessages(messages));\n  } catch (error) {\n    console.error(error);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}