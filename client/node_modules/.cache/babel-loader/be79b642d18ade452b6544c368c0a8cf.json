{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/components/Sidebar/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { BadgeAvatar, ChatContent } from \"../Sidebar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setActiveChat } from \"../../store/activeConversation\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: 8,\n    height: 80,\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\n    marginBottom: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      cursor: \"grab\"\n    }\n  },\n  tag: {\n    backgroundColor: \"#6CC1FF\",\n    borderRadius: \"50%\"\n  }\n}));\n\nconst Chat = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    conversation\n  } = props;\n  const {\n    otherUser\n  } = conversation;\n\n  const handleClick = async conversation => {\n    await props.setActiveChat(conversation.otherUser.username);\n  };\n\n  console.log(\"Inside Chat\", conversation);\n  const unreadCount = conversation.messages && conversation.messages.reduce((acc, msg) => {\n    console.log(msg);\n\n    if (!msg.msgRead) {\n      console.log('here 1');\n      return acc + 1;\n    }\n\n    console.log('here 2');\n    return acc;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    onClick: () => handleClick(conversation),\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(BadgeAvatar, {\n      photoUrl: otherUser.photoUrl,\n      username: otherUser.username,\n      online: otherUser.online,\n      sidebar: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContent, {\n      conversation: conversation,\n      unRead: unreadCount > 0 ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.tag,\n      children: unreadCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Chat;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setActiveChat: id => {\n      dispatch(setActiveChat(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/components/Sidebar/Chat.js"],"names":["React","Box","Typography","BadgeAvatar","ChatContent","makeStyles","setActiveChat","connect","useStyles","theme","root","borderRadius","height","boxShadow","marginBottom","display","alignItems","cursor","tag","backgroundColor","Chat","props","classes","conversation","otherUser","handleClick","username","console","log","unreadCount","messages","reduce","acc","msg","msgRead","photoUrl","online","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { BadgeAvatar, ChatContent } from \"../Sidebar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setActiveChat } from \"../../store/activeConversation\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 8,\n    height: 80,\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\n    marginBottom: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      cursor: \"grab\"\n    }\n  },\n  tag: {\n    backgroundColor: \"#6CC1FF\",\n    borderRadius: \"50%\",\n  }\n}));\n\nconst Chat = (props) => {\n  const classes = useStyles();\n  const { conversation } = props;\n  const { otherUser } = conversation;\n\n  const handleClick = async (conversation) => {\n    await props.setActiveChat(conversation.otherUser.username);\n  };\n\n  console.log(\"Inside Chat\", conversation);\n  const unreadCount = conversation.messages && conversation.messages.reduce((acc, msg) => {\n    console.log(msg);\n    if (!msg.msgRead) {\n      console.log('here 1');\n      return acc + 1;\n    }\n    console.log('here 2');\n    return acc;\n  }, 0);\n\n  return (\n    <Box onClick={() => handleClick(conversation)} className={classes.root}>\n      <BadgeAvatar\n        photoUrl={otherUser.photoUrl}\n        username={otherUser.username}\n        online={otherUser.online}\n        sidebar={true}\n      />\n      <ChatContent conversation={conversation} unRead={unreadCount > 0 ? true: false} />\n      <Typography className={classes.tag}>\n        {unreadCount}\n      </Typography>\n\n    </Box>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setActiveChat: (id) => {\n      dispatch(setActiveChat(id));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Chat);\n"]},"metadata":{},"sourceType":"module"}