{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Grid, CssBaseline, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SidebarContainer } from \"./Sidebar\";\nimport { ActiveChat } from \"./ActiveChat\";\nimport { logout, fetchConversations } from \"../store/utils/thunkCreators\";\nimport { clearOnLogout } from \"../store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  }\n}));\n\nconst Home = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    user,\n    logout,\n    fetchConversations\n  } = props;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    if (user.id) {\n      setIsLoggedIn(true);\n    }\n  }, [user.id]);\n  useEffect(() => {\n    fetchConversations();\n  }, [fetchConversations]);\n\n  if (!user.id) {\n    // If we were previously logged in, redirect to login instead of register\n    if (isLoggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handleLogout = async () => {\n    await logout(user.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.logout,\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SidebarContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActiveChat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"7lPFOMGSkq2wjRWXbSvN9h+e1DI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    conversations: state.conversations\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: id => {\n      dispatch(logout(id));\n      dispatch(clearOnLogout());\n    },\n    fetchConversations: () => {\n      dispatch(fetchConversations());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/components/Home.js"],"names":["React","useEffect","useState","Redirect","connect","Grid","CssBaseline","Button","makeStyles","SidebarContainer","ActiveChat","logout","fetchConversations","clearOnLogout","useStyles","theme","root","height","Home","props","classes","user","isLoggedIn","setIsLoggedIn","id","handleLogout","mapStateToProps","state","conversations","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Grid, CssBaseline, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SidebarContainer } from \"./Sidebar\";\nimport { ActiveChat } from \"./ActiveChat\";\nimport { logout, fetchConversations } from \"../store/utils/thunkCreators\";\nimport { clearOnLogout } from \"../store/index\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\"\n  }\n}));\n\nconst Home = (props) => {\n  const classes = useStyles();\n  const { user, logout, fetchConversations } = props;\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    if (user.id) {\n      setIsLoggedIn(true);\n    }\n  }, [user.id]);\n\n  useEffect(() => {\n    fetchConversations();\n  }, [fetchConversations]);\n\n  if (!user.id) {\n    // If we were previously logged in, redirect to login instead of register\n    if (isLoggedIn) return <Redirect to=\"/login\" />;\n    return <Redirect to=\"/register\" />;\n  }\n\n  const handleLogout = async () => {\n    await logout(user.id);\n  };\n\n  return (\n    <>\n      {/* logout button will eventually be in a dropdown next to username */}\n      <Button className={classes.logout} onClick={handleLogout}>\n        Logout\n      </Button>\n      <Grid container component=\"main\" className={classes.root}>\n        <CssBaseline />\n        <SidebarContainer />\n        <ActiveChat />\n      </Grid>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    conversations: state.conversations\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    logout: (id) => {\n      dispatch(logout(id));\n      dispatch(clearOnLogout());\n    },\n    fetchConversations: () => {\n      dispatch(fetchConversations());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}