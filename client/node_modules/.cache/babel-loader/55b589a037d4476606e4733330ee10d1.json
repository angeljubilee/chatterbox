{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/components/SnackbarError.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Close from \"@material-ui/icons/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  snackbar: {\n    backgroundColor: \"red\",\n    fontWeight: \"bold\"\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\n\nconst SnackbarError = props => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: props.snackBarOpen,\n    onClose: () => props.setSnackBarOpen(false),\n    message: props.errorMessage || \"Sorry, an error occured. Please try again\",\n    action: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.icon,\n        size: \"small\",\n        onClick: () => props.setSnackBarOpen(false),\n        children: /*#__PURE__*/_jsxDEV(Close, {\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this),\n    ContentProps: {\n      classes: {\n        root: classes.snackbar\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SnackbarError, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SnackbarError;\nexport default SnackbarError;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackbarError\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/components/SnackbarError.js"],"names":["React","Button","Snackbar","makeStyles","Close","useStyles","theme","snackbar","backgroundColor","fontWeight","icon","color","SnackbarError","props","classes","snackBarOpen","setSnackBarOpen","errorMessage","root"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,mBAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,KADT;AAERC,IAAAA,UAAU,EAAE;AAFJ,GAD6B;AAKvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH;AALiC,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAEQ,KAAK,CAACE,YADd;AAEE,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACG,eAAN,CAAsB,KAAtB,CAFjB;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACI,YAAN,IAAsB,2CAHjC;AAIE,IAAA,MAAM,eACJ,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAEH,OAAO,CAACJ,IADrB;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAE,MAAMG,KAAK,CAACG,eAAN,CAAsB,KAAtB,CAHjB;AAAA,+BAIE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALJ;AAcE,IAAA,YAAY,EAAE;AACZF,MAAAA,OAAO,EAAE;AACPI,QAAAA,IAAI,EAAEJ,OAAO,CAACP;AADP;AADG;AAdhB;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAxBD;;GAAMK,a;UACYP,S;;;KADZO,a;AA0BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Close from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    backgroundColor: \"red\",\n    fontWeight: \"bold\"\n  },\n  icon: {\n    color: \"white\"\n  }\n}));\n\nconst SnackbarError = (props) => {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      open={props.snackBarOpen}\n      onClose={() => props.setSnackBarOpen(false)}\n      message={props.errorMessage || \"Sorry, an error occured. Please try again\"}\n      action={\n        <React.Fragment>\n          <Button\n            className={classes.icon}\n            size=\"small\"\n            onClick={() => props.setSnackBarOpen(false)}>\n            <Close color=\"secondary\" />\n          </Button>\n        </React.Fragment>\n      }\n      ContentProps={{\n        classes: {\n          root: classes.snackbar\n        }\n      }}\n    />\n  );\n};\n\nexport default SnackbarError;\n"]},"metadata":{},"sourceType":"module"}