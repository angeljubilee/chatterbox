{"ast":null,"code":"var _jsxFileName = \"/home/angel/repos/messenger-3457/client/src/components/ActiveChat/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FormControl, FilledInput } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { postMessage } from \"../../store/utils/thunkCreators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    justifySelf: \"flex-end\",\n    marginTop: 15\n  },\n  input: {\n    height: 70,\n    backgroundColor: \"#F4F6FA\",\n    borderRadius: 8,\n    marginBottom: 20\n  }\n}));\n\nconst Input = props => {\n  _s();\n\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const {\n    postMessage,\n    otherUser,\n    conversationId,\n    user\n  } = props;\n\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // add sender user info if posting to a brand new convo, so that the other user will have access to username, profile pic, etc.\n\n    const reqBody = {\n      text: event.target.text.value,\n      recipientId: otherUser.id,\n      conversationId,\n      sender: conversationId ? null : user\n    };\n    console.log('Inside Input.js handleSubmit', conversationId);\n    await postMessage(reqBody);\n    setText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      hiddenLabel: true,\n      children: /*#__PURE__*/_jsxDEV(FilledInput, {\n        classes: {\n          root: classes.input\n        },\n        disableUnderline: true,\n        placeholder: \"Type something...\",\n        value: text,\n        name: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"HiBFSJMVT7XY25M/ZmPAyuSmc44=\", false, function () {\n  return [useStyles];\n});\n\n_c = Input;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postMessage: message => {\n      dispatch(postMessage(message));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Input);\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/angel/repos/messenger-3457/client/src/components/ActiveChat/Input.js"],"names":["React","useState","FormControl","FilledInput","makeStyles","connect","postMessage","useStyles","root","justifySelf","marginTop","input","height","backgroundColor","borderRadius","marginBottom","Input","props","classes","text","setText","otherUser","conversationId","user","handleChange","event","target","value","handleSubmit","preventDefault","reqBody","recipientId","id","sender","console","log","mapDispatchToProps","dispatch","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,iCAA5B;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC,OAAO;AAClCI,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,UADT;AAEJC,IAAAA,SAAS,EAAE;AAFP,GAD4B;AAKlCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,eAAe,EAAE,SAFZ;AAGLC,IAAAA,YAAY,EAAE,CAHT;AAILC,IAAAA,YAAY,EAAE;AAJT;AAL2B,CAAP,CAAD,CAA5B;;AAaA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEK,IAAAA,WAAF;AAAee,IAAAA,SAAf;AAA0BC,IAAAA,cAA1B;AAA0CC,IAAAA;AAA1C,MAAmDN,KAAzD;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BL,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAOH,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACI,cAAN,GADoC,CAEpC;;AACA,UAAMC,OAAO,GAAG;AACdX,MAAAA,IAAI,EAAEM,KAAK,CAACC,MAAN,CAAaP,IAAb,CAAkBQ,KADV;AAEdI,MAAAA,WAAW,EAAEV,SAAS,CAACW,EAFT;AAGdV,MAAAA,cAHc;AAIdW,MAAAA,MAAM,EAAEX,cAAc,GAAG,IAAH,GAAUC;AAJlB,KAAhB;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4Cb,cAA5C;AACA,UAAMhB,WAAW,CAACwB,OAAD,CAAjB;AACAV,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAZD;;AAcA,sBACE;AAAM,IAAA,SAAS,EAAEF,OAAO,CAACV,IAAzB;AAA+B,IAAA,QAAQ,EAAEoB,YAAzC;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAuB,MAAA,WAAW,MAAlC;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,OAAO,EAAE;AAAEpB,UAAAA,IAAI,EAAEU,OAAO,CAACP;AAAhB,SADX;AAEE,QAAA,gBAAgB,MAFlB;AAGE,QAAA,WAAW,EAAC,mBAHd;AAIE,QAAA,KAAK,EAAEQ,IAJT;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,QAAQ,EAAEK;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;GAAMR,K;UACYT,S;;;KADZS,K;;AAuCN,MAAMoB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL/B,IAAAA,WAAW,EAAGgC,OAAD,IAAa;AACxBD,MAAAA,QAAQ,CAAC/B,WAAW,CAACgC,OAAD,CAAZ,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAejC,OAAO,CAAC,IAAD,EAAO+B,kBAAP,CAAP,CAAkCpB,KAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FormControl, FilledInput } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { postMessage } from \"../../store/utils/thunkCreators\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    justifySelf: \"flex-end\",\n    marginTop: 15\n  },\n  input: {\n    height: 70,\n    backgroundColor: \"#F4F6FA\",\n    borderRadius: 8,\n    marginBottom: 20\n  }\n}));\n\nconst Input = (props) => {\n  const classes = useStyles();\n  const [text, setText] = useState(\"\");\n  const { postMessage, otherUser, conversationId, user } = props;\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // add sender user info if posting to a brand new convo, so that the other user will have access to username, profile pic, etc.\n    const reqBody = {\n      text: event.target.text.value,\n      recipientId: otherUser.id,\n      conversationId,\n      sender: conversationId ? null : user\n    };\n    console.log('Inside Input.js handleSubmit', conversationId);\n    await postMessage(reqBody);\n    setText(\"\");\n  };\n\n  return (\n    <form className={classes.root} onSubmit={handleSubmit}>\n      <FormControl fullWidth hiddenLabel>\n        <FilledInput\n          classes={{ root: classes.input }}\n          disableUnderline\n          placeholder=\"Type something...\"\n          value={text}\n          name=\"text\"\n          onChange={handleChange}\n        />\n      </FormControl>\n    </form>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    postMessage: (message) => {\n      dispatch(postMessage(message));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Input);\n"]},"metadata":{},"sourceType":"module"}